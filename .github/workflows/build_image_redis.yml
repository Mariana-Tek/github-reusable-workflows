name: Build and push to ECR #only use if application requires redis to build

on:
  workflow_call:
    inputs:
      tag_name:
        type: string
        default: latest
      redis_port:
        type: number
        default: 6379

env:
  DOCKER_BUILDKIT: 1

# permission can be added at job level or workflow level
permissions:
  id-token: write # Required to get the ID Token that will be used for OIDC
  contents: write # Required for actions/checkout

jobs:
  build: #Build and push image to ECR
    name: Build Image
    runs-on: ubuntu-latest

    services:
      redis: #needed for compressor in dockerfile
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - ${{ inputs.redis_port }}:6379

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.BUILD_AWS_IAM_ROLE_ARN }}
        role-session-name: OIDCSession

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and tag image
      run: |
        docker build --network host --build-arg VERSION=${{ github.sha }} -f ./Dockerfile -t ${{ secrets.AWS_ECR_ACCOUNT_URL }}/${{ secrets.AWS_RESOURCE_NAME_PREFIX }}:${{ github.sha }} -t ${{ secrets.AWS_ECR_ACCOUNT_URL }}/${{ secrets.AWS_RESOURCE_NAME_PREFIX }}:${{ inputs.tag_name }} .

    - name: Push image to Amazon ECR
      run: |
        docker push --all-tags ${{ secrets.AWS_ECR_ACCOUNT_URL }}/${{ secrets.AWS_RESOURCE_NAME_PREFIX }}
