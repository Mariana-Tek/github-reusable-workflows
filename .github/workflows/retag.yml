name: retag image

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      tag_name:
        required: true
        type: string

# permission can be added at job level or workflow level
permissions:
  id-token: write # Required to get the ID Token that will be used for OIDC
  contents: write # Required for actions/checkout

jobs:
  build: # Build and push image to ECR
    name: Retag image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ secrets.AWS_REGION }}
        role-to-assume: ${{ secrets.BUILD_AWS_IAM_ROLE_ARN }}
        role-session-name: OIDCSession

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: get-sha #retrieve branch sha
      id: get-sha
      run: |
         echo ::set-output name=sha::$( curl -u "u:${{github.token}}" https://api.github.com/repos/$GITHUB_REPOSITORY/git/ref/heads/${{ inputs.branch_name }} | jq .object.sha | tr -d '"' )

    - name: Retag image
      run: |
         MANIFEST=$(aws ecr batch-get-image --repository-name ${{ secrets.AWS_RESOURCE_NAME_PREFIX }} --image-ids imageTag=${{ steps.get-sha.outputs.sha }} --query 'images[].imageManifest' --output text)
         echo $MANIFEST
         docker_tag_args=""
         for tag in "${DOCKER_TAGS[@]}"; do
           #aws ecr put-image --repository-name ${{ secrets.AWS_RESOURCE_NAME_PREFIX}} --image-tag $tag --image-manifest "${MANIFEST}"
           echo $tag
         done
      env:
        DOCKER_TAGS: ${{ inputs.tag_name }},${{ github.sha }}
